
==================== FINAL INTERFACE ====================
2018-09-05 00:26:56.5113931 UTC

interface main:Main 8043
  interface hash: bea1cdf34814a542d7f13fbddd1e7e4b
  ABI hash: 6650782761e75cbf0279d7b26c5f05c5
  export-list hash: 56f85429fa8ff66630db83777d62b638
  orphan hash: a43933d0c0fe706f4f6707d3f935c893
  flag hash: de166465013f9041c1c0a447604f84da
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies: Model
package dependencies: Win32-2.6.1.0 aeson-1.3.1.1
                      aeson-compat-0.3.8 ansi-terminal-0.8.0.4 appar-0.1.4 array-0.5.2.0
                      async-2.2.1 attoparsec-0.13.2.2 attoparsec-iso8601-1.0.0.0
                      auto-update-0.1.4 base-4.11.1.0 base-compat-0.10.4
                      base64-bytestring-1.0.0.1 binary-0.8.5.1 blaze-builder-0.4.1.0
                      blaze-html-0.9.1.1 blaze-markup-0.8.2.1 bsb-http-chunked-0.0.0.2
                      byteorder-1.0.4 bytestring-0.10.8.2 case-insensitive-1.2.0.11
                      colour-2.3.4 conduit-1.3.0.3 conduit-extra-1.3.0
                      containers-0.5.11.0 data-default-class-0.1.2.0 deepseq-1.4.3.0
                      directory-1.3.1.5 dlist-0.8.0.4 easy-file-0.2.2 exceptions-0.10.0
                      fast-logger-2.4.11 filepath-1.4.2 ghc-boot-th-8.4.3
                      ghc-prim-0.5.2.0 hashable-1.2.7.0 haskell-src-exts-1.20.2
                      haskell-src-meta-0.8.0.3 http-api-data-0.3.8.1 http-date-0.0.8
                      http-types-0.12.1 http2-1.6.3 integer-gmp-1.0.2.0
                      integer-logarithms-1.0.2.1 iproute-1.7.5 lifted-base-0.2.3.12
                      microlens-0.4.9.1 microlens-th-0.4.2.2 mintty-0.1.2
                      monad-control-1.0.2.3 monad-logger-0.3.29 monad-loops-0.4.3
                      mtl-2.2.2 network-2.6.3.6 path-pieces-0.2.1 persistent-2.8.2
                      persistent-sqlite-2.8.2 persistent-template-2.5.4 pretty-1.1.3.6
                      primitive-0.6.3.0 psqueues-0.2.7.0 random-1.1 regex-base-0.93.2
                      regex-compat-0.95.1 regex-posix-0.95.2 resource-pool-0.2.3.2
                      resourcet-1.2.1 scientific-0.3.6.2 scotty-0.11.2 silently-1.2.5
                      stm-2.4.5.0 stm-chans-3.0.0.4 streaming-commons-0.2.1.0
                      stringsearch-0.3.6.6 tagged-0.8.5 template-haskell-2.13.0.0
                      text-1.2.3.0 th-abstraction-0.2.8.0 time-1.8.0.2
                      time-locale-compat-0.1.1.5 transformers-0.5.5.0
                      transformers-base-0.4.5.2 unix-compat-0.5.1 unliftio-core-0.1.1.0
                      unordered-containers-0.2.9.0 uuid-types-1.0.3 vault-0.3.1.2
                      vector-0.12.0.1 wai-3.2.1.2 wai-extra-3.0.24.2 wai-logger-2.3.2
                      warp-3.2.23 word8-0.1.3
orphans: regex-posix-0.95.2:Text.Regex.Posix.String
         regex-posix-0.95.2:Text.Regex.Posix.Sequence
         regex-posix-0.95.2:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2:Text.Regex.Posix.ByteString
         regex-base-0.93.2:Text.Regex.Base.Context colour-2.3.4:Data.Colour
         network-2.6.3.6:Network.Socket
         persistent-template-2.5.4:Database.Persist.TH
         haskell-src-exts-1.20.2:Language.Haskell.Exts.Parser
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistUnique
         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
         attoparsec-0.13.2.2:Data.Attoparsec.ByteString.Char8
         vector-0.12.0.1:Data.Vector.Unboxed
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         stm-2.4.5.0:Control.Monad.STM
         hashable-1.2.7.0:Data.Hashable.Generic
         transformers-0.5.5.0:Control.Monad.Trans.Error
         attoparsec-0.13.2.2:Data.Attoparsec.Text.Internal
         text-1.2.3.0:Data.Text.Lazy text-1.2.3.0:Data.Text
         binary-0.8.5.1:Data.Binary.Generic
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: aeson-1.3.1.1:Data.Aeson.Types.Internal
                         attoparsec-0.13.2.2:Data.Attoparsec.Internal.Types
                         base-4.11.1.0:Control.Applicative base-4.11.1.0:Data.Complex
                         base-4.11.1.0:Data.Functor.Compose base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         conduit-1.3.0.3:Data.Conduit.Internal.Conduit
                         conduit-1.3.0.3:Data.Conduit.Internal.Pipe
                         containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal containers-0.5.11.0:Data.Tree
                         dlist-0.8.0.4:Data.DList ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.SrcLoc
                         haskell-src-exts-1.20.2:Language.Haskell.Exts.Syntax
                         iproute-1.7.5:Data.IP.Addr iproute-1.7.5:Data.IP.Range main:Model
                         microlens-0.4.9.1:Lens.Micro.Internal
                         monad-control-1.0.2.3:Control.Monad.Trans.Control
                         monad-logger-0.3.29:Control.Monad.Logger
                         persistent-2.8.2:Database.Persist.Class.PersistConfig
                         persistent-2.8.2:Database.Persist.Class.PersistEntity
                         persistent-2.8.2:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.8.2:Database.Persist.Sql.Types.Internal
                         persistent-sqlite-2.8.2:Database.Persist.Sqlite
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         resourcet-1.2.1:Control.Monad.Trans.Resource.Internal
                         scotty-0.11.2:Web.Scotty.Internal.Types tagged-0.8.5:Data.Tagged
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.8.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         uuid-types-1.0.3:Data.UUID.Types.Internal
                         uuid-types-1.0.3:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.11.1.0:Control.Applicative 7fa66cb1a6267582246bf60408ed5690
import  -/  base-4.11.1.0:Control.Monad 60c7bc648329161549cea9b9658c9b81
import  -/  base-4.11.1.0:Control.Monad.IO.Class 694bff5efe7ac21a1b559205e16ee286
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  base-4.11.1.0:System.IO 7331ec6891ba7763ad75720258619382
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html 0d8435bb838f60ae0ee01465956d6b60
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html.Renderer.Text c46086084244f5ac8e45156829ab5b8c
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html5 f28a2bd877a4c8d2436f8fd9ee328698
import  -/  blaze-html-0.9.1.1:Text.Blaze.Html5.Attributes 1635d54ba2d6907ccc0e4e0219b3beee
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  Model a0c13007bbc9efd231406732b49d13ef
  exports: 7c74344736231b616f36e3702bdee895
  Post 1a8de9a41c3b1bb354799323173ab6a4
  Post 8eab13c3b7902d0dd641dc354fbd280f
  migrateAll af5d1cf009ae288f69f723385d1ca3aa
  postTitle 8eab13c3b7902d0dd641dc354fbd280f
import  -/  monad-logger-0.3.29:Control.Monad.Logger 9b06f4e45501665b5e3626bc196c1c98
import  -/  persistent-2.8.2:Database.Persist 95688947be57478e5c4886db2dbe0342
import  -/  persistent-2.8.2:Database.Persist.Class.PersistEntity 1d7dd4ddeb4694eeacc2aae1f977bb11
import  -/  persistent-2.8.2:Database.Persist.Class.PersistQuery 5a7cc8c6080bcc5934f1f3d20a310131
import  -/  persistent-2.8.2:Database.Persist.Class.PersistStore b78379767fb62bcef894b38c5189804d
import  -/  persistent-2.8.2:Database.Persist.Sql 066ac50828945fc9ad21c935bf330f6a
import  -/  persistent-2.8.2:Database.Persist.Sql.Migration 4bd42eb425d4718703688dbfba949017
import  -/  persistent-2.8.2:Database.Persist.Sql.Run 67ed6555f51a637491cfcc67053fa78d
import  -/  persistent-2.8.2:Database.Persist.Sql.Types b5ad3053b8db75a1ab4717c41c348240
import  -/  persistent-sqlite-2.8.2:Database.Persist.Sqlite f5d0f6378c2944755c3a5d8ac36cd9f5
import  -/  persistent-template-2.5.4:Database.Persist.TH d7b5573185db406dcab9fb30265ad3f6
import  -/  resourcet-1.2.1:Control.Monad.Trans.Resource 397a7df5eef62a44edb1a0e992de58c2
import  -/  resourcet-1.2.1:Control.Monad.Trans.Resource.Internal 08390dca3c5e386a9e12e5b47ad84059
import  -/  scotty-0.11.2:Web.Scotty d6919393ed342ea7e399b09f465a3927
import  -/  text-1.2.3.0:Data.Text c0e21f1d8acb5250a7f89b5dc0e8964e
import  -/  time-1.8.0.2:Data.Time bd2233e04916b7a5e34c1642e07e4a42
import  -/  time-1.8.0.2:Data.Time.Clock.POSIX 06b390070acc8b07289f18f60e901739
import  -/  wai-extra-3.0.24.2:Network.Wai.Middleware.RequestLogger 112b9e5034b93983b2f55b4e33039804
251cbcf05fa9ffd3506bff323187549e
  $s$fApplicativeNoLoggingT ::
    GHC.Base.Applicative (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
                  GHC.Base.$fApplicativeIO4
                    `cast`
                  (forall (a :: <*>_N).
                   <a>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <a>_N)
                  (\ @ a @ b -> GHC.Base.$fApplicativeIO3 @ b @ a)
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Sym (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a
                                                                                -> b>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <b>_N)
                  GHC.Base.$fApplicativeIO_$cliftA2
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <b>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <c>_N)
                  GHC.Base.$fApplicativeIO2
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Sym (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <b>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <b>_N)
                  GHC.Base.$fApplicativeIO1
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Sym (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <b>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <a>_N) -}
92924b08169f80008a9727464f8bd04c
  $s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT ::
    GHC.Base.Functor (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  GHC.Base.$fFunctorIO2
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <b>_N)
                  GHC.Base.$fFunctorIO1
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <b>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <a>_N) -}
e46cc4b41780489bbd889c78b4035d23
  $s$fApplicativeResourceT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
                  (\ @ a (eta4 :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta4 #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                     <GHC.Types.IO>_R) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                         <Control.Monad.Logger.NoLoggingT
                                                                                            GHC.Types.IO>_R
                                                                                         <a>_N)))
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Logger.NoLoggingT GHC.Types.IO) (a -> b))
                     (ds1 :: Control.Monad.Trans.Resource.Internal.ResourceT
                               (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a -> b>_N)
                           r)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R <a
                                                                                -> b>_N ; GHC.Types.N:IO[0]
                                                                                              <a
                                                                                               -> b>_R)
                          s of ds2 { (#,#) ipv ipv1 ->
                   case (ds1
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          ipv of ds3 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Logger.NoLoggingT GHC.Types.IO) (a -> b)>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <b>_N))
                  (\ @ a
                     @ b
                     @ c
                     (eta4 :: a -> b -> c)
                     (eta5 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (eta6 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                     (eta7 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta5
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           eta7)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta6
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                           eta7)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, eta4 ipv1 ipv3 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N) (c :: <*>_N).
                   <a -> b -> c>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <c>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <c>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <c>_N))
                  (\ @ a
                     @ b
                     (eta4 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (eta5 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                     (eta6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta4
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           eta6)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (eta5
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                      eta6)
                     `cast`
                   (Control.Monad.Logger.N:NoLoggingT[0]
                        <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <b>_N))
                  (\ @ a
                     @ b
                     (eta4 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (eta5 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                     (eta6 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta4
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           eta6)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   case (eta5
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                           eta6)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                          ipv of ds1 { (#,#) ipv2 ipv3 ->
                   (# ipv2, ipv1 #) } })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <a>_N)) -}
75e60662018716514859e5357e27f383
  $s$fApplicativeResourceT_$s$fFunctorResourceT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  (\ @ a
                     @ b
                     (f :: a -> b)
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   (# ipv, f ipv1 #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a -> b>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <b>_N))
                  (\ @ a
                     @ b
                     (x :: a)
                     (eta4 :: Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                     (eta5 :: GHC.IORef.IORef
                                Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (eta4
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                           eta5)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                          s of ds { (#,#) ipv ipv1 ->
                   (# ipv, x #) })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <a>_R
                   ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <a>_N)) -}
c49c29604e05b5da20c911587d922a62
  $s$fMonadIONoLoggingT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT
                  (\ @ a -> GHC.Base.id @ (GHC.Types.IO a))
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <a>_N) -}
bf93bc112c276774d287c430766d5a6c
  $s$fMonadIONoLoggingT_$s$fMonadNoLoggingT ::
    GHC.Base.Monad (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  Main.$s$fApplicativeNoLoggingT
                  GHC.Base.$fMonadIO1
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Sym (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N
                   ->_R (<a>_R
                         ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                       <GHC.Types.IO>_R) <b>_N)
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <b>_N)
                  GHC.Base.$fApplicativeIO2
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   Sym (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <b>_N
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <b>_N)
                  GHC.Base.$fApplicativeIO4
                    `cast`
                  (forall (a :: <*>_N).
                   <a>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <a>_N)
                  GHC.Base.$fMonadIO_$cfail
                    `cast`
                  (forall (a :: <*>_N).
                   <[GHC.Types.Char]>_R
                   ->_R Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                 <GHC.Types.IO>_R) <a>_N) -}
b4faa9b1ccc6a7068dfc019baa60dce1
  $s$fMonadIOResourceT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT
                  (\ @ a
                     (eta4 :: GHC.Types.IO a)
                     (ds :: GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                   eta4)
                    `cast`
                  (forall (a :: <*>_N).
                   <GHC.Types.IO a>_R
                   ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                 (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N)) -}
98788ca5057d887699c0db795c1541b7
  $s$fMonadIOResourceT_$cliftIO ::
    GHC.Types.IO a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (eta4 :: GHC.Types.IO a)
                   (ds :: GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                 eta4)
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Types.IO a>_R
                 ->_R Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                               (Control.Monad.Logger.N:NoLoggingT[0] <GHC.Types.IO>_R) <a>_N)) -}
837cd32f6847edccc3371a5fac8b1202
  $s$fMonadIOResourceT_$s$fMonadResourceT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  Main.$s$fApplicativeResourceT
                  (\ @ a
                     @ b
                     (ds :: Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                     (f :: a
                           -> Control.Monad.Trans.Resource.Internal.ResourceT
                                (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                     (r :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap)
                     (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                   case (ds
                           `cast`
                         (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                              <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                           r)
                          `cast`
                        (Control.Monad.Logger.N:NoLoggingT[0]
                             <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                          s of ds1 { (#,#) ipv ipv1 ->
                   ((f ipv1)
                      `cast`
                    (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                         <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                      r)
                     `cast`
                   (Control.Monad.Logger.N:NoLoggingT[0]
                        <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                     ipv })
                    `cast`
                  (forall (a :: <*>_N) (b :: <*>_N).
                   <Control.Monad.Trans.Resource.Internal.ResourceT
                      (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                   ->_R <a
                         -> Control.Monad.Trans.Resource.Internal.ResourceT
                              (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                   ->_R (<GHC.IORef.IORef
                            Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                         <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                             <Control.Monad.Logger.NoLoggingT
                                                                                                GHC.Types.IO>_R
                                                                                             <b>_N))
                  Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
                  (\ @ a (eta4 :: a) ->
                   let {
                     x :: GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                       {- Arity: 1 -}
                     = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta4 #)
                   } in
                   (\ (ds :: GHC.IORef.IORef
                               Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                    x)
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                     <GHC.Types.IO>_R) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                         <Control.Monad.Logger.NoLoggingT
                                                                                            GHC.Types.IO>_R
                                                                                         <a>_N)))
                  (\ @ a ->
                   GHC.Err.errorWithoutStackTrace
                     @ 'GHC.Types.LiftedRep
                     @ (Control.Monad.Trans.Resource.Internal.ResourceT
                          (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)) -}
95607b10d500dcb7d431f082e829ad3e
  $s$fMonadIOResourceT_$s$fMonadResourceT_$c>> ::
    Control.Monad.Trans.Resource.Internal.ResourceT
      (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SL))),1*C1(C1(U(U,A)))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ a
                   @ b
                   (m2 :: Control.Monad.Trans.Resource.Internal.ResourceT
                            (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Resource.Internal.ResourceT
                           (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (m2
                         `cast`
                       (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <a>_N)
                         r)
                        `cast`
                      (Control.Monad.Logger.N:NoLoggingT[0]
                           <GHC.Types.IO>_R <a>_N ; GHC.Types.N:IO[0] <a>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (k `cast`
                  (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                       <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R <b>_N)
                    r)
                   `cast`
                 (Control.Monad.Logger.N:NoLoggingT[0]
                      <GHC.Types.IO>_R <b>_N ; GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (a :: <*>_N) (b :: <*>_N).
                 <Control.Monad.Trans.Resource.Internal.ResourceT
                    (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a>_R
                 ->_R <Control.Monad.Trans.Resource.Internal.ResourceT
                         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                       <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                           <Control.Monad.Logger.NoLoggingT
                                                                                              GHC.Types.IO>_R
                                                                                           <b>_N)) -}
ac6625de8242c8f5790d9726cdc448db
  $s$fMonadResourceT_$creturn ::
    a
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a (eta4 :: a) ->
                 let {
                   x :: GHC.Prim.State# GHC.Prim.RealWorld
                        -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
                     {- Arity: 1 -}
                   = \ (s :: GHC.Prim.State# GHC.Prim.RealWorld) -> (# s, eta4 #)
                 } in
                 (\ (ds :: GHC.IORef.IORef
                             Control.Monad.Trans.Resource.Internal.ReleaseMap) ->
                  x)
                   `cast`
                 ((<GHC.IORef.IORef
                      Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                   ->_R Sym (GHC.Types.N:IO[0]
                                 <a>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                   <GHC.Types.IO>_R) <a>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                       <Control.Monad.Logger.NoLoggingT
                                                                                          GHC.Types.IO>_R
                                                                                       <a>_N))) -}
993df00bab97f344b70351c452afaa96
  $s$fMonadUnliftIONoLoggingT ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                  Main.$s$fMonadIONoLoggingT
                  (Control.Monad.Logger.$fMonadUnliftIONoLoggingT_$caskUnliftIO
                     @ GHC.Types.IO
                     Control.Monad.IO.Unlift.$fMonadUnliftIOIO)
                  Main.$s$fMonadUnliftIONoLoggingT_$s$fMonadUnliftIONoLoggingT_$cwithRunInIO -}
494c269d6d3bc3442551838bd9ec0ba6
  $s$fMonadUnliftIONoLoggingT_$s$fMonadUnliftIONoLoggingT_$cwithRunInIO ::
    ((forall a.
      Control.Monad.Logger.NoLoggingT GHC.Types.IO a -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Logger.NoLoggingT GHC.Types.IO b
  {- Arity: 2, Strictness: <L,1*C1(C1(U(U,U)))><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Logger.NoLoggingT GHC.Types.IO a -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Control.Monad.Logger.$fMonadUnliftIONoLoggingT_$caskUnliftIO
                         @ GHC.Types.IO
                         Control.Monad.IO.Unlift.$fMonadUnliftIOIO)
                        `cast`
                      (Control.Monad.Logger.N:NoLoggingT[0]
                           <GHC.Types.IO>_R <Control.Monad.IO.Unlift.UnliftIO
                                               (Control.Monad.Logger.NoLoggingT
                                                  GHC.Types.IO)>_N ; GHC.Types.N:IO[0]
                                                                         <Control.Monad.IO.Unlift.UnliftIO
                                                                            (Control.Monad.Logger.NoLoggingT
                                                                               GHC.Types.IO)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (ds
                    ipv1
                      `cast`
                    (Control.Monad.IO.Unlift.N:UnliftIO[0]
                         <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Logger.NoLoggingT GHC.Types.IO a -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                 <GHC.Types.IO>_R) <b>_N) -}
d8668bab2ad87db16434a243119957ce
  $s$fMonadUnliftIOResourceT ::
    Control.Monad.IO.Unlift.MonadUnliftIO
      (Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Control.Monad.Trans.Resource.Internal.ResourceT
                       (Control.Monad.Logger.NoLoggingT GHC.Types.IO))
                  Main.$s$fMonadIOResourceT
                  (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                     @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                     Main.$s$fMonadUnliftIONoLoggingT)
                    `cast`
                  (Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                            <Control.Monad.Logger.NoLoggingT GHC.Types.IO>_R
                            <Control.Monad.IO.Unlift.UnliftIO
                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                  (Control.Monad.Logger.NoLoggingT GHC.Types.IO))>_N))
                  Main.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO -}
5548dec338181c8e7a38fe2de4b8fd4c
  $s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO ::
    ((forall a.
      Control.Monad.Trans.Resource.Internal.ResourceT
        (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
      -> GHC.Types.IO a)
     -> GHC.Types.IO b)
    -> Control.Monad.Trans.Resource.Internal.ResourceT
         (Control.Monad.Logger.NoLoggingT GHC.Types.IO) b
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ b
                   (ds :: (forall a.
                           Control.Monad.Trans.Resource.Internal.ResourceT
                             (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
                           -> GHC.Types.IO a)
                          -> GHC.Types.IO b)
                   (r :: GHC.IORef.IORef
                           Control.Monad.Trans.Resource.Internal.ReleaseMap)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT1
                         @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                         Main.$s$fMonadUnliftIONoLoggingT
                         r)
                        `cast`
                      (Control.Monad.Logger.N:NoLoggingT[0]
                           <GHC.Types.IO>_R <Control.Monad.IO.Unlift.UnliftIO
                                               (Control.Monad.Trans.Resource.Internal.ResourceT
                                                  (Control.Monad.Logger.NoLoggingT
                                                     GHC.Types.IO))>_N ; GHC.Types.N:IO[0]
                                                                             <Control.Monad.IO.Unlift.UnliftIO
                                                                                (Control.Monad.Trans.Resource.Internal.ResourceT
                                                                                   (Control.Monad.Logger.NoLoggingT
                                                                                      GHC.Types.IO))>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (ds
                    ipv1
                      `cast`
                    (Control.Monad.IO.Unlift.N:UnliftIO[0]
                         <Control.Monad.Trans.Resource.Internal.ResourceT
                            (Control.Monad.Logger.NoLoggingT GHC.Types.IO)>_R))
                   `cast`
                 (GHC.Types.N:IO[0] <b>_R)
                   ipv })
                  `cast`
                (forall (b :: <*>_N).
                 <(forall a.
                   Control.Monad.Trans.Resource.Internal.ResourceT
                     (Control.Monad.Logger.NoLoggingT GHC.Types.IO) a
                   -> GHC.Types.IO a)
                  -> GHC.Types.IO b>_R
                 ->_R (<GHC.IORef.IORef
                          Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <b>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                       <GHC.Types.IO>_R) <b>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                           <Control.Monad.Logger.NoLoggingT
                                                                                              GHC.Types.IO>_R
                                                                                           <b>_N)) -}
ad176d734ab3657ba947014f3cd18a1c
  $s$fParsable[] :: Web.Scotty.Action.Parsable [GHC.Types.Char]
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [GHC.Types.Char]
                  Web.Scotty.Action.$fParsableChar_$cparseParamList
                  (Web.Scotty.Action.$fParsable[]_$cparseParamList
                     @ GHC.Types.Char
                     Web.Scotty.Action.$fParsableChar) -}
500051e01a172bad693fd668cbd7c109
  $screateSqlitePoolFromInfo1_$d~~ ::
    (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
    GHC.Types.~~ (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
b2059161f218d177197b5890e5bc3b84
  $screateSqlitePoolFromInfo2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     (Database.Persist.Sql.Types.Internal.SqlBackend :: *)
     Data.Type.Equality.~ (Database.Persist.Sql.Types.Internal.SqlBackend :: *))
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Main.$screateSqlitePoolFromInfo1_$d~~
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
13147f20660f355772ad707f522633b2
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
084575f42836f33b8bcf99c1df39457c
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main58
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case (Control.Monad.Trans.Resource.runResourceT
                         @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                         @ ()
                         Main.$s$fMonadUnliftIONoLoggingT
                         Main.main57
                           `cast`
                         ((<GHC.IORef.IORef
                              Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <()>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                            <GHC.Types.IO>_R) <()>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                 <Control.Monad.Logger.NoLoggingT
                                                                                                    GHC.Types.IO>_R
                                                                                                 <()>_N)))
                        `cast`
                      (Control.Monad.Logger.N:NoLoggingT[0]
                           <GHC.Types.IO>_R <()>_N ; GHC.Types.N:IO[0] <()>_R)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 (Web.Scotty.Trans.scottyOptsT
                    @ GHC.Types.IO
                    @ GHC.Types.IO
                    @ Data.Text.Internal.Lazy.Text
                    GHC.Base.$fMonadIO
                    Control.Monad.IO.Class.$fMonadIOIO
                    Main.main54
                    (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                    Main.main2
                      `cast`
                    ((<Web.Scotty.Internal.Types.ScottyState
                         Data.Text.Internal.Lazy.Text GHC.Types.IO>_R
                      ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                    <((),
                                      Web.Scotty.Internal.Types.ScottyState
                                        Data.Text.Internal.Lazy.Text
                                        GHC.Types.IO)>_R)) ; (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                       <Web.Scotty.Internal.Types.ScottyState
                                                                          Data.Text.Internal.Lazy.Text
                                                                          GHC.Types.IO>_N
                                                                       <Data.Functor.Identity.Identity>_R
                                                                       <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ScottyT[0]
                                                                                          <Data.Text.Internal.Lazy.Text>_N
                                                                                          <GHC.Types.IO>_N) <()>_N)))
                   `cast`
                 (GHC.Types.N:IO[0] <()>_R)
                   ipv2 } }) -}
c1faead256cd8c1729a3f82b915ed0ee
  main10 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main11 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
d6b2b74de684bc04ac3e01c7f553b7ad
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main12) -}
15e5b769578b0d0919ac5caebd2aee25
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ul"#) -}
07016677365e9bc4a72fc2a0c6cf9f5c
  main13 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m1,
     Unfolding: (Text.Blaze.Internal.Parent
                   @ ()
                   Main.main24
                   Main.main21
                   Main.main18
                   Main.main14) -}
e428370d26aca5e4664b1482cc59113d
  main14 :: Text.Blaze.Internal.MarkupM ()
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Main.main15
                   GHC.Tuple.()) -}
d491aeb4a24513208e29de5dcc9cfb3e
  main15 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m2,
     Unfolding: (Text.Blaze.Internal.String Main.main16) -}
eb9eca616b5cff2d1cb146adee67c4e4
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main17) -}
38be0d22936543084caf3f75bba7f6e1
  main17 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("My Todo List App in Haskell"#) -}
d69c493ffc332d032ab945fbc85586f1
  main18 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main19 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
e64694413367673f93c20e409bce1bec
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main20) -}
38f4adc178d846fd19658e9ddd7b3222
  main2 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> ((),
        Web.Scotty.Internal.Types.ScottyState
          Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1, Strictness: <L,1*U(U,U,U)>m,
     Unfolding: (\ (s1 :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO)[OneShot] ->
                 (GHC.Tuple.(),
                  case s1 of wild { Web.Scotty.Internal.Types.ScottyState ds ds1 ds2 ->
                  Web.Scotty.Internal.Types.ScottyState
                    @ Data.Text.Internal.Lazy.Text
                    @ GHC.Types.IO
                    (GHC.Types.:
                       @ Network.Wai.Middleware
                       Network.Wai.Middleware.RequestLogger.logStdoutDev
                       ds)
                    (GHC.Types.:
                       @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                       (Web.Scotty.Route.route
                          @ Data.Text.Internal.Lazy.Text
                          @ GHC.Types.IO
                          Web.Scotty.Internal.Types.$fScottyErrorText
                          Control.Monad.IO.Class.$fMonadIOIO
                          ds2
                          Web.Scotty.get2
                          Main.main51
                          Main.main50
                            `cast`
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <Web.Scotty.Internal.Types.ActionEnv>_R
                                    <Control.Monad.Trans.State.Lazy.StateT
                                       Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                    <Data.Either.Either
                                       (Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text)
                                       ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                          <Web.Scotty.Internal.Types.ActionError
                                                             Data.Text.Internal.Lazy.Text>_N
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             Web.Scotty.Internal.Types.ActionEnv
                                                             (Control.Monad.Trans.State.Lazy.StateT
                                                                Web.Scotty.Internal.Types.ScottyResponse
                                                                GHC.Types.IO)>_R
                                                          <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                             <Data.Text.Internal.Lazy.Text>_N
                                                                             <GHC.Types.IO>_R) <()>_N)))
                       (GHC.Types.:
                          @ (Web.Scotty.Internal.Types.Middleware GHC.Types.IO)
                          (Web.Scotty.Route.route
                             @ Data.Text.Internal.Lazy.Text
                             @ GHC.Types.IO
                             Web.Scotty.Internal.Types.$fScottyErrorText
                             Control.Monad.IO.Class.$fMonadIOIO
                             ds2
                             Web.Scotty.get2
                             Main.main47
                             Main.main3
                               `cast`
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <Web.Scotty.Internal.Types.ActionEnv>_R
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                       <Data.Either.Either
                                          (Web.Scotty.Internal.Types.ActionError
                                             Data.Text.Internal.Lazy.Text)
                                          ()>_N) ; (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                             <Web.Scotty.Internal.Types.ActionError
                                                                Data.Text.Internal.Lazy.Text>_N
                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                Web.Scotty.Internal.Types.ActionEnv
                                                                (Control.Monad.Trans.State.Lazy.StateT
                                                                   Web.Scotty.Internal.Types.ScottyResponse
                                                                   GHC.Types.IO)>_R
                                                             <()>_N) ; Sym (Web.Scotty.Internal.Types.N:ActionT[0]
                                                                                <Data.Text.Internal.Lazy.Text>_N
                                                                                <GHC.Types.IO>_R) <()>_N)))
                          ds1))
                    ds2 })) -}
7e1e5253f5614f9e863ad2ddd1e71afc
  main20 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</h1>"#) -}
bb02b3f4349c3114c0a9c3c5eba0a3b1
  main21 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main22 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
d7fbc3f965bbb86952d8221901fb3ab5
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main23) -}
875d1bc3a29ace7713f728839f19e5b6
  main23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<h1"#) -}
21ac20653f8a573f16e3bcfff16b574e
  main24 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main25 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
fc93e873d46b29fce55a157c16fc74fb
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main26) -}
6e26f5cbd5ecb968945208c6845fcef9
  main26 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("h1"#) -}
d4b6b5f11de5c399ce4786d54fcbf288
  main27 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main28 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
d21f396fb5b2a35562e8b0ae6c4f71d9
  main28 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main29) -}
cf89303dff99dd7be98af8e350d75436
  main29 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</body>"#) -}
f048a4c892e654e2f707bb31c8562743
  main3 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (w4 :: Web.Scotty.Internal.Types.ActionEnv) ->
                 Web.Scotty.Internal.Types.$w$c>>=
                   @ GHC.Types.IO
                   @ Data.Text.Internal.Lazy.Text
                   GHC.Base.$fMonadIO
                   @ [Database.Persist.Class.PersistEntity.Entity Model.Post]
                   @ ()
                   Main.main_w2
                   Main.main_w3
                   w4) -}
1ba0ff1fdb9be1afd03d48a6eaf5e675
  main30 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main31 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
55aae523e00d2b343231b2d46e70a832
  main31 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main32) -}
b4ce52746dbcbf20cd68c0c5d779907d
  main32 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<body"#) -}
d77b8f852ba0b3ab014ab2d4cebaa709
  main33 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main34 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
ecb87704feaa4dee6deb44179563b1c2
  main34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main35) -}
816e8b7f7552662e16faf138cdc6cd33
  main35 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("body"#) -}
d653840b52c3b794f69452c12b472e40
  main36 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main37 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
a3a19f35111fd503b0d4e0f0f6569541
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main38) -}
c47c0f9103ac7a554f7730743ce6852f
  main38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</html>"#) -}
e7433aed5b89c0ed13a705afaa032914
  main39 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main40 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
9a1923f5748a7759a340ea86c9f3ac38
  main4 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main5 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
1c43fcb341a63a42cb4d5d5eae0caac8
  main40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main41) -}
2cd564b919b38a67012dd8a12cf22435
  main41 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<html"#) -}
d48bfbd721de600f8078dd194369a8e6
  main42 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main43 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
28a915e1045d53c2c363536002c14720
  main43 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main44) -}
6161680b984b60a926a7bd14c1f39de5
  main44 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("html"#) -}
b421aeed8873c18e7aa154aa51fcd686
  main45 ::
    Control.Monad.Logger.NoLoggingT
      GHC.Types.IO
      [Database.Persist.Class.PersistEntity.Entity Model.Post]
  {- Unfolding: (Control.Monad.Trans.Resource.runResourceT
                   @ (Control.Monad.Logger.NoLoggingT GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity Model.Post]
                   Main.$s$fMonadUnliftIONoLoggingT
                   Main.main46
                     `cast`
                   ((<GHC.IORef.IORef
                        Control.Monad.Trans.Resource.Internal.ReleaseMap>_R
                     ->_R Sym (GHC.Types.N:IO[0]
                                   <[Database.Persist.Class.PersistEntity.Entity
                                       Model.Post]>_R) ; Sym (Control.Monad.Logger.N:NoLoggingT[0]
                                                                  <GHC.Types.IO>_R) <[Database.Persist.Class.PersistEntity.Entity
                                                                                        Model.Post]>_N) ; Sym (Control.Monad.Trans.Resource.Internal.N:ResourceT[0]
                                                                                                                   <Control.Monad.Logger.NoLoggingT
                                                                                                                      GHC.Types.IO>_R
                                                                                                                   <[Database.Persist.Class.PersistEntity.Entity
                                                                                                                       Model.Post]>_N))) -}
331f4475c014a6a573f7cbac997a34da
  main46 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          [Database.Persist.Class.PersistEntity.Entity Model.Post] #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
545dae8167ebd94d1ef5232dc0a9049d
  main47 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main48) -}
9b4ecb4aef2da3415c52e923dcd4a536
  main48 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        (GHC.CString.unpackCString# Main.main49) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
2b2364094f42aadc0bc39b0cbdeb141c
  main49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/"#) -}
e6a3081f2d4849a4a4d5167218763b4b
  main5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main6) -}
e2a89c3845b264ddb9bc12376b00ffdc
  main50 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1, Strictness: <L,U> -}
dc4a07d8bb0764b98a3057e7b2e7b303
  main51 :: Web.Scotty.Internal.Types.RoutePattern
  {- Strictness: m1,
     Unfolding: (Web.Scotty.Internal.Types.Capture Main.main52) -}
254f2f50f3a3a6b9b06d5e61cf800678
  main52 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        (GHC.CString.unpackCString# Main.main53) of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
c6fe77d860cbd60c941b693d130fbb2c
  main53 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("/create/:title"#) -}
fdff7e2ab122fbf8f0d8fadae4ed2107
  main54 :: Web.Scotty.Internal.Types.Options
  {- Strictness: m,
     Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions1
                   Main.main55) -}
668beda977876c267aa341d904ea472c
  main55 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   Main.main56
                   Network.Wai.Handler.Warp.Settings.defaultSettings16
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings15
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings14
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                     `cast`
                   (Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings10
                     `cast`
                   (<(forall a. GHC.Types.IO a -> GHC.Types.IO a)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings6
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings3
                   GHC.Types.True
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Network.HTTP.Types.Status.Status>_R
                    ->_R <GHC.Base.Maybe GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings1
                     `cast`
                   (<Network.Wai.Internal.Request>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <GHC.Integer.Type.Integer>_R
                    ->_R Sym (GHC.Types.N:IO[0] <()>_R))
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
37aa69710a6e6a91274730506ad3ce6f
  main56 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 3000#) -}
87b80fe86c15fc15b3d3c64e57b45006
  main57 ::
    GHC.IORef.IORef Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><S,U> -}
d615f89909447a7b13fb99e1a8e3e7f5
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main59) -}
f0b4f9ef86721d70360fed0036c4d12f
  main59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Starting Server..."#) -}
028e508d96e13b0db5a85354104d5497
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("</ul>"#) -}
edfd7a3d0a229867a6ce7161566b17ee
  main60 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
945861c060f1086a7fa73b90d1b867ef
  main7 :: Text.Blaze.Internal.StaticString
  {- Unfolding: (case Text.Blaze.Internal.$w$cfromString
                        Main.main8 of ww { (#,,#) ww1 ww2 ww3 ->
                 Text.Blaze.Internal.StaticString ww1 ww2 ww3 }) -}
1fd80858f9cbd2aa6a7f8d3747e32e9d
  main8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main9) -}
13493477ee4b47c7e802c551e3420601
  main9 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("<ul"#) -}
77ea274e0334de390b14bd3ec796b7b5
  main_go ::
    [Database.Persist.Class.PersistEntity.Entity Model.Post]
    -> Text.Blaze.Internal.MarkupM ()
  {- Arity: 1, Strictness: <S,1*U> -}
f929ea323b22adef05327e115f2fa718
  main_w2 ::
    Web.Scotty.Internal.Types.ActionT
      Data.Text.Internal.Lazy.Text
      GHC.Types.IO
      [Database.Persist.Class.PersistEntity.Entity Model.Post]
  {- Unfolding: (Web.Scotty.Internal.Types.$w$cliftIO
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Control.Monad.IO.Class.$fMonadIOIO
                   @ [Database.Persist.Class.PersistEntity.Entity Model.Post]
                   Main.main45
                     `cast`
                   (Control.Monad.Logger.N:NoLoggingT[0]
                        <GHC.Types.IO>_R <[Database.Persist.Class.PersistEntity.Entity
                                             Model.Post]>_N)) -}
832648c785f77f9906a767d0baf2a91d
  main_w3 ::
    [Database.Persist.Class.PersistEntity.Entity Model.Post]
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (_posts :: [Database.Persist.Class.PersistEntity.Entity
                                 Model.Post]) ->
                 Web.Scotty.Action.$whtml
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   GHC.Base.$fMonadIO
                   (Text.Blaze.Renderer.Text.renderMarkupWith
                      Data.Text.Encoding.decodeUtf8
                      (Text.Blaze.Internal.Parent
                         @ ()
                         Main.main42
                         Main.main39
                         Main.main36
                         (Text.Blaze.Internal.Parent
                            @ ()
                            Main.main33
                            Main.main30
                            Main.main27
                            (Text.Blaze.Internal.Append
                               @ ()
                               @ ()
                               Main.main13
                               (Text.Blaze.Internal.Parent
                                  @ ()
                                  Main.main10
                                  Main.main7
                                  Main.main4
                                  (Main.main_go _posts))))))) -}
"SPEC/Main $fApplicativeNoLoggingT @ IO" [orphan] forall (v :: GHC.Base.Applicative
                                                                 GHC.Types.IO)
  Control.Monad.Logger.$fApplicativeNoLoggingT @ GHC.Types.IO v
  = Main.$s$fApplicativeNoLoggingT
"SPEC/Main $fApplicativeResourceT @ (NoLoggingT IO)" [orphan] forall (v :: GHC.Base.Applicative
                                                                             (Control.Monad.Logger.NoLoggingT
                                                                                GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fApplicativeResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                    GHC.Types.IO)
                                                               v
  = Main.$s$fApplicativeResourceT
"SPEC/Main $fFunctorNoLoggingT @ IO" [orphan] forall (v :: GHC.Base.Functor
                                                             GHC.Types.IO)
  Control.Monad.Logger.$fFunctorNoLoggingT @ GHC.Types.IO v
  = Main.$s$fApplicativeNoLoggingT_$s$fFunctorNoLoggingT
"SPEC/Main $fFunctorResourceT @ (NoLoggingT IO)" [orphan] forall (v :: GHC.Base.Functor
                                                                         (Control.Monad.Logger.NoLoggingT
                                                                            GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fFunctorResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                GHC.Types.IO)
                                                           v
  = Main.$s$fApplicativeResourceT_$s$fFunctorResourceT
"SPEC/Main $fMonadIONoLoggingT @ IO" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                             GHC.Types.IO)
  Control.Monad.Logger.$fMonadIONoLoggingT @ GHC.Types.IO v
  = Main.$s$fMonadIONoLoggingT
"SPEC/Main $fMonadIOResourceT @ (NoLoggingT IO)" [orphan] forall (v :: Control.Monad.IO.Class.MonadIO
                                                                         (Control.Monad.Logger.NoLoggingT
                                                                            GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                GHC.Types.IO)
                                                           v
  = Main.$s$fMonadIOResourceT
"SPEC/Main $fMonadIOResourceT_$cliftIO @ (NoLoggingT IO)" [orphan] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                          (Control.Monad.Logger.NoLoggingT
                                                                                             GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadIOResourceT_$cliftIO @ (Control.Monad.Logger.NoLoggingT
                                                                         GHC.Types.IO)
                                                                    $dMonadIO
  = Main.$s$fMonadIOResourceT_$cliftIO
"SPEC/Main $fMonadNoLoggingT @ IO" [orphan] forall (v :: GHC.Base.Monad
                                                           GHC.Types.IO)
  Control.Monad.Logger.$fMonadNoLoggingT @ GHC.Types.IO v
  = Main.$s$fMonadIONoLoggingT_$s$fMonadNoLoggingT
"SPEC/Main $fMonadResourceT @ (NoLoggingT IO)" [orphan] forall (v :: GHC.Base.Monad
                                                                       (Control.Monad.Logger.NoLoggingT
                                                                          GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT @ (Control.Monad.Logger.NoLoggingT
                                                              GHC.Types.IO)
                                                         v
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT
"SPEC/Main $fMonadResourceT_$c>> @ (NoLoggingT IO)" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                  (Control.Monad.Logger.NoLoggingT
                                                                                     GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$c>> @ (Control.Monad.Logger.NoLoggingT
                                                                   GHC.Types.IO)
                                                              $dMonad
  = Main.$s$fMonadIOResourceT_$s$fMonadResourceT_$c>>
"SPEC/Main $fMonadResourceT_$creturn @ (NoLoggingT IO)" [orphan] forall ($dMonad :: GHC.Base.Monad
                                                                                      (Control.Monad.Logger.NoLoggingT
                                                                                         GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadResourceT_$creturn @ (Control.Monad.Logger.NoLoggingT
                                                                       GHC.Types.IO)
                                                                  $dMonad
  = Main.$s$fMonadResourceT_$creturn
"SPEC/Main $fMonadUnliftIONoLoggingT @ IO" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                   GHC.Types.IO)
  Control.Monad.Logger.$fMonadUnliftIONoLoggingT @ GHC.Types.IO v
  = Main.$s$fMonadUnliftIONoLoggingT
"SPEC/Main $fMonadUnliftIONoLoggingT_$cwithRunInIO @ IO" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                               GHC.Types.IO)
  Control.Monad.Logger.$fMonadUnliftIONoLoggingT_$cwithRunInIO @ GHC.Types.IO
                                                               $dMonadUnliftIO
  = Main.$s$fMonadUnliftIONoLoggingT_$s$fMonadUnliftIONoLoggingT_$cwithRunInIO
"SPEC/Main $fMonadUnliftIOResourceT @ (NoLoggingT IO)" [orphan] forall (v :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                               (Control.Monad.Logger.NoLoggingT
                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT @ (Control.Monad.Logger.NoLoggingT
                                                                      GHC.Types.IO)
                                                                 v
  = Main.$s$fMonadUnliftIOResourceT
"SPEC/Main $fMonadUnliftIOResourceT_$cwithRunInIO @ (NoLoggingT IO)" [orphan] forall ($dMonadUnliftIO :: Control.Monad.IO.Unlift.MonadUnliftIO
                                                                                                           (Control.Monad.Logger.NoLoggingT
                                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Resource.Internal.$fMonadUnliftIOResourceT_$cwithRunInIO @ (Control.Monad.Logger.NoLoggingT
                                                                                    GHC.Types.IO)
                                                                               $dMonadUnliftIO
  = Main.$s$fMonadUnliftIOResourceT_$s$fMonadUnliftIOResourceT_$cwithRunInIO
"SPEC/Main $fParsable[] @ Char" [orphan] forall (v :: Web.Scotty.Action.Parsable
                                                        GHC.Types.Char)
  Web.Scotty.Action.$fParsable[] @ GHC.Types.Char v
  = Main.$s$fParsable[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

